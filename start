#!/bin/bash

exit_script() {
    echo "received SIGTERM, need to shut down LND and LTCD!"
    trap - SIGINT SIGTERM # clear the trap
    kill -- -$$ # Sends SIGTERM to child/sub processes
}

echo "Starting Lightning Node!"
source /usr/src/app/env/bin/activate

for i in `seq 1 10`;
do
        echo $i;
        sleep 0.25;
	python3 --version
done  
# echo 

# export PATH=$PATH:/root/go/bin
# export GOPATH=/root/gocode
# export PATH=$PATH:$GOPATH/bin

source /usr/src/app/.profile

go version

while [[ true ]]; do
	echo "$ACTIVE_CHAIN Lightning Node is UP for $SECONDS seconds!"
	sleep 5
done


#source /etc/profile

# *****************************
# Download and install Bitcoin!
# *****************************
# download Bitcoin Core binary and also check out commit on GitHub
# git clone --branch $BITCOIND_VERSION git@github.com:bitcoin/bitcoin.git --depth 1


wget https://bitcoincore.org/bin/bitcoin-core-$BITCOIND_VERSION/bitcoin-$BITCOIND_VERSION-arm-linux-gnueabihf.tar.gz
wget https://bitcoincore.org/bin/bitcoin-core-$BITCOIND_VERSION/SHA256SUMS.asc
wget https://bitcoin.org/laanwj-releases.asc

tar -xvf bitcoin-$BITCOIND_VERSION-arm-linux-gnueabihf.tar.gz
install -m 0755 -o root -g root -t /usr/local/bin bitcoin-$BITCOIND_VERSION/bin/*

bitcoind --version

# *****************************
# Download and install Litecoin!
# *****************************
wget https://download.litecoin.org/litecoin-$LITECOIND_VERSION/linux/litecoin-$LITECOIND_VERSION-arm-linux-gnueabihf.tar.gz
wget https://download.litecoin.org/litecoin-$LITECOIND_VERSION/linux/litecoin-$LITECOIND_VERSION-arm-linux-gnueabihf.tar.gz.asc
wget https://download.litecoin.org/litecoin-$LITECOIND_VERSION/linux/litecoin-$LITECOIND_VERSION-linux-signatures.asc

tar -xvf litecoin-$LITECOIND_VERSION-arm-linux-gnueabihf.tar.gz
install -m 0755 -o root -g root -t /usr/local/bin litecoin-$LITECOIND_VERSION/bin/*

litecoind --version



# *****************************
# Download and install LND!
# *****************************

# download LND binary and also check out commit on GitHub
# git clone --branch $LND_VERSION git@github.com:lightningnetwork/lnd.git --depth 1
# tar -xzf lnd-linux-armv7-$LND_VERSION.tar.gz

wget https://github.com/lightningnetwork/lnd/releases/download/$LND_VERSION/lnd-linux-armv7-$LND_VERSION.tar.gz
wget https://github.com/lightningnetwork/lnd/releases/download/$LND_VERSION/manifest-$LND_VERSION.txt
wget https://github.com/lightningnetwork/lnd/releases/download/$LND_VERSION/manifest-$LND_VERSION.txt.sig
wget https://keybase.io/roasbeef/pgp_keys.asc

tar -xvf lnd-linux-armv7-$LND_VERSION.tar.gz
install -m 0755 -o root -g root -t /usr/local/bin lnd-linux-armv7-$LND_VERSION/*

lnd --version

# Over-write fstab with the current UUID from Balena Service Variable
mkdir -p /media/blockchain_data/
echo "UUID=$BLOCKCHAIN_UUID  /media/blockchain_data/      $BLOCKCHAIN_FSTYPE            defaults,errors=remount-ro 0       1" > /etc/fstab
mount -a
ls /media/blockchain_data/

SWAP_SETUP=$(tac /etc/dphys-swapfile | egrep -m 1 .)
if [ $SWAP_SETUP != "CONF_SWAPFILE=/media/blockchain_data/swapfile" ]; then
	echo "Configuring the system files for the swap file!"
	dphys-swapfile swapoff
	sudo dphys-swapfile uninstall
	echo "CONF_SWAPFILE=/media/blockchain_data/swapfile" >> /etc/dphys-swapfile
fi

if [ ! -f /media/blockchain_data/swapfile ]; then
	echo "Creating a swap file!"
	dd if=/dev/zero of=/media/blockchain_data/swapfile count=1000 bs=1MiB
	chmod 600 /media/blockchain_data/swapfile
	mkswap /media/blockchain_data/swapfile
	dphys-swapfile setup
fi

# This need to happen every boot-up
dphys-swapfile swapon

free


# Link data on drive to standard location used by bitcoind and lnd.
# Notice no trailing slash on source!

# If statement for bitcoin or litecoin
if [ "$ACTIVE_CHAIN" = "BITCOIN" ]; then
	ln -s /media/blockchain_data/btc_lnd/bitcoin /root/.bitcoin
	ln -s /media/blockchain_data/btc_lnd/lnd /root/.lnd
	alias "lncli"="lncli --chain=bitcoin"
elif [ "$ACTIVE_CHAIN" = "LITECOIN" ]; then
	ln -s /media/blockchain_data/ltc_lnd/litecoin /root/.litecoin
	ln -s /media/blockchain_data/ltc_lnd/lnd /root/.lnd
	alias "lncli"="lncli --chain=litecoin"
fi

# ln -s /media/blockchain_data/.ltcd /root/.ltcd
# ln -s /media/blockchain_data/.lnd /root/.lnd
# ln -s /media/blockchain_data/Downloads /root/Downloads
# ln -s /media/blockchain_data/gocode /root/gocode
# ln -s /media/blockchain_data/go /root/go

trap exit_script SIGINT SIGTERM

echo "Completed download, installation, and autostart setup of LND and Bitcoind!"


export PATH=$PATH:/root/go/bin
export GOPATH=/root/gocode
export PATH=$PATH:$GOPATH/bin

trap exit_script SIGINT SIGTERM

echo "Completed download, installation, and autostart setup of LTCD and LND!"

# Some kind of infinite loop is required here:
while [[ true ]]; do
	echo "$ACTIVE_CHAIN Lightning Node is UP for $SECONDS seconds!"
	sleep 5
done

# TODO: LATER
# Install google grpc stuff
# Don't Download this quite yet, in the future maybe
# IDK what I was doing before, but this works. Make sure to enter your VENV
# And be in the right directory
git clone --depth 1 --single-branch https://github.com/googleapis/googleapis.git
curl -o rpc.proto -s https://raw.githubusercontent.com/lightningnetwork/lnd/master/lnrpc/rpc.proto
python3 -m grpc_tools.protoc --proto_path=googleapis:. --python_out=. --grpc_python_out=. rpc.proto
# python3 -m http.server 80 &
